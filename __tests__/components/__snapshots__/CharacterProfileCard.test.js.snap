// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Character Profile Card can select all options in the modal 1`] = `
<View>
  <CharacterProfileCard
    character={
      Object {
        "background": Object {
          "lookupKey": "Background",
          "name": "Background",
        },
        "baseClass": Object {
          "lookupKey": "Class",
          "name": "Class",
        },
        "key": "key",
        "meta": Object {
          "lastUpdated": 0,
        },
        "profile": Object {
          "experience": 0,
          "firstName": "First",
          "lastName": "Last",
          "level": 1,
        },
        "race": Object {
          "lookupKey": "Race",
          "name": "Race",
        },
      }
    }
    deleteHandler={[Function]}
    editHandler={[Function]}
    isModalVisible={false}
    modalContent={null}
    modalHandler={[Function]}
    uiTheme={
      Object {
        "palette": Object {
          "accentColor": "#f44336",
          "backdropIconColor": "#bdbdbd",
          "backgroundColor": "#eeeeee",
          "disabledColor": "#e0e0e0",
          "fadedBackgroundColor": "rgba(0, 0, 0, 0.7)",
          "fadedTextColor": "#616161",
          "highlightedDiceColor": "#f44336",
          "iconColor": "#757575",
          "modalBackgroundColor": "#ffffff",
          "noteColor": "#9e9e9e",
          "primaryColor": "#3f51b5",
          "standardDiceColor": "#424242",
          "textColor": "#000000",
        },
        "toolbar": Object {
          "container": Object {
            "elevation": 0,
            "shadowOffset": Object {
              "height": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          },
        },
      }
    }
    viewHandler={[Function]}
  />
  <ReactNativeModal
    animationIn="slideInUp"
    animationInTiming={300}
    animationOut="slideOutDown"
    animationOutTiming={300}
    avoidKeyboard={false}
    backdropColor="black"
    backdropOpacity={0.7}
    backdropTransitionInTiming={300}
    backdropTransitionOutTiming={300}
    hideModalContentWhileAnimating={false}
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalShow={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    swipeThreshold={100}
    useNativeDriver={false}
  >
    <View />
  </ReactNativeModal>
</View>
`;

exports[`Character Profile Card can select all options in the modal 2`] = `
<View>
  <CharacterProfileCard
    character={
      Object {
        "background": Object {
          "lookupKey": "Background",
          "name": "Background",
        },
        "baseClass": Object {
          "lookupKey": "Class",
          "name": "Class",
        },
        "key": "key",
        "meta": Object {
          "lastUpdated": 0,
        },
        "profile": Object {
          "experience": 0,
          "firstName": "First",
          "lastName": "Last",
          "level": 1,
        },
        "race": Object {
          "lookupKey": "Race",
          "name": "Race",
        },
      }
    }
    deleteHandler={[Function]}
    editHandler={[Function]}
    isModalVisible={true}
    modalContent={
      <View
        style={
          Object {
            "margin": 0,
          }
        }
      >
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "Roboto",
                    "fontSize": 14,
                  },
                  Object {
                    "color": "#000000",
                  },
                ]
              }
            >
              First Last
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Image
              resizeMode="contain"
              style={
                Object {
                  "height": 36,
                  "width": 36,
                }
              }
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={null}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "borderBottomColor": "#e0e0e0",
                "borderBottomWidth": 1,
                "height": 55,
                "margin": 0,
              },
              "contentViewContainer": Object {
                "backgroundColor": "#fafafa",
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Object {
                  "color": "#000000",
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                }
              }
            >
              View Character
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Icon
              color="#757575"
              name="open-in-new"
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={[Function]}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "height": 50,
                "margin": 0,
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Object {
                  "color": "#000000",
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                }
              }
            >
              Edit Character
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Icon
              color="#757575"
              name="mode-edit"
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={[Function]}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "height": 50,
                "margin": 0,
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Object {
                  "color": "#000000",
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                }
              }
            >
              Delete Character
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Icon
              color="#757575"
              name="delete"
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={[Function]}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "height": 50,
                "margin": 0,
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
      </View>
    }
    modalHandler={[Function]}
    uiTheme={
      Object {
        "palette": Object {
          "accentColor": "#f44336",
          "backdropIconColor": "#bdbdbd",
          "backgroundColor": "#eeeeee",
          "disabledColor": "#e0e0e0",
          "fadedBackgroundColor": "rgba(0, 0, 0, 0.7)",
          "fadedTextColor": "#616161",
          "highlightedDiceColor": "#f44336",
          "iconColor": "#757575",
          "modalBackgroundColor": "#ffffff",
          "noteColor": "#9e9e9e",
          "primaryColor": "#3f51b5",
          "standardDiceColor": "#424242",
          "textColor": "#000000",
        },
        "toolbar": Object {
          "container": Object {
            "elevation": 0,
            "shadowOffset": Object {
              "height": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          },
        },
      }
    }
    viewHandler={[Function]}
  />
  <ReactNativeModal
    animationIn="slideInUp"
    animationInTiming={300}
    animationOut="slideOutDown"
    animationOutTiming={300}
    avoidKeyboard={false}
    backdropColor="black"
    backdropOpacity={0.7}
    backdropTransitionInTiming={300}
    backdropTransitionOutTiming={300}
    hideModalContentWhileAnimating={false}
    isVisible={true}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalShow={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    swipeThreshold={100}
    useNativeDriver={false}
  >
    <View>
      <View
        style={
          Object {
            "margin": 0,
          }
        }
      >
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "Roboto",
                    "fontSize": 14,
                  },
                  Object {
                    "color": "#000000",
                  },
                ]
              }
            >
              First Last
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Image
              resizeMode="contain"
              style={
                Object {
                  "height": 36,
                  "width": 36,
                }
              }
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={null}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "borderBottomColor": "#e0e0e0",
                "borderBottomWidth": 1,
                "height": 55,
                "margin": 0,
              },
              "contentViewContainer": Object {
                "backgroundColor": "#fafafa",
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Object {
                  "color": "#000000",
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                }
              }
            >
              View Character
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Icon
              color="#757575"
              name="open-in-new"
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={[Function]}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "height": 50,
                "margin": 0,
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Object {
                  "color": "#000000",
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                }
              }
            >
              Edit Character
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Icon
              color="#757575"
              name="mode-edit"
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={[Function]}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "height": 50,
                "margin": 0,
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
        <ListItem
          centerElement={
            <Styled(Text)
              style={
                Object {
                  "color": "#000000",
                  "fontFamily": "Roboto",
                  "fontSize": 14,
                }
              }
            >
              Delete Character
            </Styled(Text)>
          }
          dense={false}
          divider={false}
          leftElement={
            <Icon
              color="#757575"
              name="delete"
            />
          }
          numberOfLines={1}
          onLeftElementPress={null}
          onLongPress={null}
          onPress={[Function]}
          onPressValue={null}
          onRightElementPress={null}
          rightElement={null}
          style={
            Object {
              "container": Object {
                "height": 50,
                "margin": 0,
              },
              "leftElementContainer": Object {
                "marginRight": -10,
              },
            }
          }
          testID={null}
        />
      </View>
    </View>
  </ReactNativeModal>
</View>
`;

exports[`Character Profile Card renders properly for characters at max level 1`] = `
<Styled(Card)
  style={
    Object {
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 10,
    }
  }
>
  <Styled(CardItem)
    cardBody={true}
  >
    <Image
      style={
        Object {
          "flex": 1,
          "height": 100,
          "width": null,
        }
      }
    />
    <View
      style={
        Object {
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <IconToggle
        color="#ffffff"
        name="more-vert"
        onPress={[Function]}
      />
    </View>
    <View
      style={
        Object {
          "bottom": 0,
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Styled(Text)
        style={
          Array [
            Object {
              "borderTopLeftRadius": 5,
              "color": "#ffffff",
              "fontFamily": "Roboto",
              "fontSize": 12,
              "fontStyle": "italic",
              "paddingBottom": 3,
              "paddingLeft": 5,
              "paddingRight": 5,
              "paddingTop": 3,
            },
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.7)",
            },
          ]
        }
      >
        Last updated 
        a few seconds ago
      </Styled(Text)>
    </View>
  </Styled(CardItem)>
  <Styled(CardItem)>
    <Styled(Left)
      style={
        Object {
          "flex": 2,
        }
      }
    >
      <Image
        resizeMode="contain"
        style={
          Object {
            "height": 64,
            "width": 48,
          }
        }
      />
      <Styled(Body)>
        <Styled(Text)
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "RobotoLight",
                "fontSize": 18,
                "width": 175,
              },
              Object {
                "color": "#000000",
              },
            ]
          }
        >
          First Last
           
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "color": "#9e9e9e",
                "fontFamily": "Roboto",
                "fontSize": 14,
              },
              Object {
                "color": "#9e9e9e",
              },
            ]
          }
        >
          Race
           
          Class
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "color": "#9e9e9e",
                "fontFamily": "Roboto",
                "fontSize": 14,
              },
              Object {
                "color": "#9e9e9e",
              },
            ]
          }
        >
          Background
        </Styled(Text)>
      </Styled(Body)>
    </Styled(Left)>
    <Styled(Right)
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Styled(Text)
          style={
            Array [
              Object {
                "color": "#9e9e9e",
                "fontFamily": "RobotoLight",
                "fontSize": 16,
              },
              Object {
                "color": "#9e9e9e",
              },
            ]
          }
        >
          Level 
          20
        </Styled(Text)>
        <ProgressBar
          animated={false}
          animationConfig={
            Object {
              "bounciness": 0,
            }
          }
          animationType="spring"
          borderColor="#3f51b5"
          borderRadius={4}
          borderWidth={1}
          color="#3f51b5"
          height={6}
          indeterminate={false}
          progress={1}
          style={
            Object {
              "marginBottom": 3,
              "marginTop": 3,
            }
          }
          useNativeDriver={false}
          width={100}
        />
        <Styled(Text)
          style={
            Object {
              "color": "#9e9e9e",
              "fontFamily": "RobotoLight",
              "fontSize": 14,
            }
          }
        >
          355.0k
        </Styled(Text)>
      </View>
    </Styled(Right)>
  </Styled(CardItem)>
</Styled(Card)>
`;

exports[`Character Profile Card renders properly for characters below max level 1`] = `
<Styled(Card)
  style={
    Object {
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 10,
    }
  }
>
  <Styled(CardItem)
    cardBody={true}
  >
    <Image
      style={
        Object {
          "flex": 1,
          "height": 100,
          "width": null,
        }
      }
    />
    <View
      style={
        Object {
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <IconToggle
        color="#ffffff"
        name="more-vert"
        onPress={[Function]}
      />
    </View>
    <View
      style={
        Object {
          "bottom": 0,
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Styled(Text)
        style={
          Array [
            Object {
              "borderTopLeftRadius": 5,
              "color": "#ffffff",
              "fontFamily": "Roboto",
              "fontSize": 12,
              "fontStyle": "italic",
              "paddingBottom": 3,
              "paddingLeft": 5,
              "paddingRight": 5,
              "paddingTop": 3,
            },
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.7)",
            },
          ]
        }
      >
        Last updated 
        a few seconds ago
      </Styled(Text)>
    </View>
  </Styled(CardItem)>
  <Styled(CardItem)>
    <Styled(Left)
      style={
        Object {
          "flex": 2,
        }
      }
    >
      <Image
        resizeMode="contain"
        style={
          Object {
            "height": 64,
            "width": 48,
          }
        }
      />
      <Styled(Body)>
        <Styled(Text)
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "RobotoLight",
                "fontSize": 18,
                "width": 175,
              },
              Object {
                "color": "#000000",
              },
            ]
          }
        >
          First Last
           
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "color": "#9e9e9e",
                "fontFamily": "Roboto",
                "fontSize": 14,
              },
              Object {
                "color": "#9e9e9e",
              },
            ]
          }
        >
          Race
           
          Class
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "color": "#9e9e9e",
                "fontFamily": "Roboto",
                "fontSize": 14,
              },
              Object {
                "color": "#9e9e9e",
              },
            ]
          }
        >
          Background
        </Styled(Text)>
      </Styled(Body)>
    </Styled(Left)>
    <Styled(Right)
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Styled(Text)
          style={
            Array [
              Object {
                "color": "#9e9e9e",
                "fontFamily": "RobotoLight",
                "fontSize": 16,
              },
              Object {
                "color": "#9e9e9e",
              },
            ]
          }
        >
          Level 
          1
        </Styled(Text)>
        <ProgressBar
          animated={false}
          animationConfig={
            Object {
              "bounciness": 0,
            }
          }
          animationType="spring"
          borderColor="#3f51b5"
          borderRadius={4}
          borderWidth={1}
          color="#3f51b5"
          height={6}
          indeterminate={false}
          progress={0}
          style={
            Object {
              "marginBottom": 3,
              "marginTop": 3,
            }
          }
          useNativeDriver={false}
          width={100}
        />
        <Styled(Text)
          style={
            Object {
              "color": "#9e9e9e",
              "fontFamily": "RobotoLight",
              "fontSize": 14,
            }
          }
        >
          0
           / 
          300
        </Styled(Text)>
      </View>
    </Styled(Right)>
  </Styled(CardItem)>
</Styled(Card)>
`;
